---
- name: "Ensure required parameters are provided."
  ansible.builtin.assert:
    that:
      - quarkus_app_workdir is defined
      - quarkus_path_to_folder_to_deploy is defined
      - app_name is defined
    quiet: true

- name: "Ensure required OpenJDK is installed on target."
  ansible.builtin.package:
    name: "{{ quarkus_openjdk_package_version }}"
    state: present
  delegate_to: localhost
  become: true
  when:
    - quarkus_openjdk_package_version is defined

- name: "Ensure Quarkus system group exists on target system"
  ansible.builtin.group:
    name: "{{ quarkus_app_group }}"
  when:
    - quarkus_app_group is defined

- name: "Ensure Quarkus user exists on target system."
  ansible.builtin.user:
    name: "{{ quarkus_app_user }}"
  when:
    - quarkus_app_user is defined

- name: "Ensure deployement directory exits: {{ quarkus_path_to_folder_to_deploy }}."
  ansible.builtin.file:
    path: "{{ quarkus_path_to_folder_to_deploy }}"
    state: directory
    owner: "{{ quarkus_app_user | default(omit) }}"
    group: "{{ quarkus_app_group | default(omit) }}"
    mode: 0755

- name: "Set Quarkus app source dir (if not defined)."
  ansible.builtin.set_fact:
    quarkus_app_src_dir: "{{ quarkus_app_workdir }}/{{ quarkus_app_source_folder | default('') }}/{{ quarkus_build_relative_path_to_deploy_dir }}/"
  when:
    - not quarkus_app_src_dir is defined

- name: "List Quarkus app src dir."
  ansible.builtin.command: "ls {{ quarkus_app_src_dir }}"
  register: ls_dir

- name: "Print result"
  ansible.builtin.debug:
    var: ls_dir

- name: "Deploy application from  to target system"
  ansible.builtin.copy:
    src: "{{ quarkus_app_src_dir }}"
    dest: "{{ quarkus_path_to_folder_to_deploy }}"
    owner: "{{ quarkus_app_user | default(omit) }}"
    group: "{{ quarkus_app_group | default(omit) }}"
    remote_src: true
    mode: 0755
  become: true
  changed_when: false

- name: "Deploy Systemd configuration for Quarkus app"
  ansible.builtin.template:
    src: "{{ quarkus_systemd_service_template }}"
    dest: "{{ quarkus_systemd_home }}/{{ quarkus_app_service_name }}.service"
    owner: "{{ quarkus_app_user | default(omit) }}"
    group: "{{ quarkus_app_group | default(omit) }}"
    mode: 0640
  register: quarkus_deploy_systemd_service_conf
  become: true
  vars:
    service_user: "{{ quarkus_app_user | default(omit) }}"
    service_group: "{{ quarkus_app_group | default(omit) }}"
  when:
    - quarkus_app_service_name is defined

- name: "Perform daemon-reload to ensure the changes are picked up"
  ansible.builtin.systemd:
    daemon_reload: true
  become: true
  when:
    - quarkus_app_service_name is defined
    - quarkus_deploy_systemd_service_conf is defined
    - quarkus_deploy_systemd_service_conf.changed is defined
    - quarkus_deploy_systemd_service_conf.changed

- name: "Ensure Quarkus app service is running."
  ansible.builtin.service:
    name: "{{ quarkus_app_service_name }}"
    state: started
    enabled: true
  when:
    - quarkus_app_service_name is defined

- block:
    - name: "Ensure firewalld is available."
      become: true
      ansible.builtin.package:
        name: "{{ quarkus_firewalld_package }}"
        state: present

    - name: "Configure firewall for {{ quarkus_app_port_firewalld }} ports"
      become: yes
      ansible.posix.firewalld:
        port: "{{ quarkus_app_port_firewalld }}"
        permanent: true
        state: enabled
        immediate: yes
  when:
    - quarkus_app_firewalld_enabled is defined and quarkus_app_firewalld_enabled
